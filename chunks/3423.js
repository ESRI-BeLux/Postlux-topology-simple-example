"use strict";(self.webpackChunkarcgis_typescript_template=self.webpackChunkarcgis_typescript_template||[]).push([[3423],{83423:(t,e,i)=>{i.d(e,{l:()=>S});var l=i(82392),s=i(73783),o=i(57888),n=i(61985),a=i(23572),r=i(81482),h=(i(6273),i(80861),i(67498),i(26325)),c=i(53334),y=i(80347),u=i(19913),p=i(34561),b=i(64159),g=i(19541),d=i(61793),m=i(44223),_=i(99842),f=i(17467);let S=class extends s.A{set graphic(t){this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()}get elevationInfo(){const{layer:t}=this.graphic,e=t&&"elevationInfo"in t?t.elevationInfo:null,i=(0,g.ky)(this.graphic),l=e?e.offset:0;return new m.A({mode:i,offset:l})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.consumesClicks=!0,this.events=new o.A.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const e=this.graphic;if(!1===e.visible)return null;const i=e.geometry;if(null==i)return null;const l=this._get("focusedSymbol"),s=null!=l?l:e.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,t,i,s):this._intersectDistance3D(this.view,t,e)}attach(){this.attachSymbolChanged(),null!=this.layer&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),null!=this.layer&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=(0,n.wB)((()=>this.graphic?.symbol),(t=>{null!=t&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&null!=this.focusedSymbol&&(this.graphic.symbol=this.focusedSymbol))}),n.OH)}detachSymbolChanged(){null!=this._graphicSymbolChangedHandle&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&null!=this.focusedSymbol?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,e,i,l){if(null==(l=l||(0,d.SF)(i)))return null;let s=this._circleCollisionCache;if("point"===i.type&&"cim"===l.type&&"CIMPointSymbol"===l.data.symbol?.type&&l.data.symbol.symbolLayers){const{offsetX:s,offsetY:o,size:n}=(0,_.T)(l),r=(0,a.WA)(e,C),h=n/2,y=t.toScreen(i),u=y.x+s,p=y.y+o;return(0,c.hG)(r,[u,p])<h*h?1:null}if("point"!==i.type||"simple-marker"!==l.type)return(0,f.t)(e,i,t)?1:null;if(null==s||!s.originalPoint.equals(i)){const e=i,o=t.spatialReference;if((0,p.canProjectWithoutEngine)(e.spatialReference,o)){const t=(0,p.project)(e,o);s={originalPoint:e.clone(),mapPoint:t,radiusPx:(0,a.Lz)(l.size)},this._circleCollisionCache=s}}if(null!=s){const i=(0,a.WA)(e,C),o=t.toScreen?.(s.mapPoint);if(!o)return null;const n=s.radiusPx,r=o.x+(0,a.Lz)(l.xoffset),h=o.y-(0,a.Lz)(l.yoffset);return(0,c.hG)(i,[r,h])<n*n?1:null}return null}_intersectDistance3D(t,e,i){const l=t.toMap(e,{include:[i]});return l&&(0,b.g)(l,v,t.renderSpatialReference)?(0,y.q)(v,t.state.camera.eye):null}};(0,l._)([(0,r.MZ)({constructOnly:!0,nonNullable:!0})],S.prototype,"graphic",null),(0,l._)([(0,r.MZ)()],S.prototype,"elevationInfo",null),(0,l._)([(0,r.MZ)({constructOnly:!0,nonNullable:!0})],S.prototype,"view",void 0),(0,l._)([(0,r.MZ)({value:null})],S.prototype,"focusedSymbol",null),(0,l._)([(0,r.MZ)({constructOnly:!0})],S.prototype,"layer",void 0),(0,l._)([(0,r.MZ)()],S.prototype,"interactive",void 0),(0,l._)([(0,r.MZ)()],S.prototype,"selectable",void 0),(0,l._)([(0,r.MZ)()],S.prototype,"grabbable",void 0),(0,l._)([(0,r.MZ)({value:!1})],S.prototype,"grabbing",null),(0,l._)([(0,r.MZ)()],S.prototype,"dragging",void 0),(0,l._)([(0,r.MZ)()],S.prototype,"hovering",null),(0,l._)([(0,r.MZ)({value:!1})],S.prototype,"selected",null),(0,l._)([(0,r.MZ)()],S.prototype,"cursor",void 0),S=(0,l._)([(0,h.$)("esri.views.interactive.GraphicManipulator")],S);const v=(0,u.vt)(),C=(0,a.gs)()},99842:(t,e,i)=>{i.d(e,{T:()=>s});var l=i(23572);function s(t){let e=0,i=0,s=0;return t?("cim"===t.type&&t.data.symbol&&"symbolLayers"in t.data.symbol&&t.data.symbol.symbolLayers&&t.data.symbol.symbolLayers.map((t=>{"CIMVectorMarker"===t.type&&t.anchorPoint&&(Math.abs(t.anchorPoint.x)>e&&(e=t.anchorPoint.x),Math.abs(t.anchorPoint.y)>i&&(i=t.anchorPoint.y),null!=t.size&&t.size>s&&(s=t.size))})),e=(0,l.Lz)(e),i=(0,l.Lz)(i),s=(0,l.Lz)(s),{offsetX:e,offsetY:i,size:s}):{offsetX:e,offsetY:i,size:s}}}}]);